{
  "openapi" : "3.0.0",
  "servers" : [],
  "info" : {
    "description" : "# Introduction \n\nCredy is a company that specializes on the quality lead generation. \\\nThis document further describes how to integrate API to send leads to Credy.\\\nIf you have any questions, please do not hesitate to contact the IT manager at [it@credy.eu](mailto:it@credy.eu).\n\n## General information\n\nProduction URL: [https://api.credy.eu/v3/](https://api.credy.eu/v3/)\n\nStaging URL: [http://api.staging.credy.eu/v3/](http://api.staging.credy.eu/v3/)\n\nAPI supports post fields, XML and JSON.\n\nTo get response error messages in Indonesian, \"Accept-Language\" header’s value must be set to according ISO code. Ex: `ka`.\n\n## Signing requests\nEach request must be signed. Signature consists of api_key, timestamp and hash.\n\nHash is a SHA1 hash of the concatenation of timestamp, api_key and secret_key.\n\nAllowed deviation for timestamp is UTC +/- 60 seconds.\n\n*ex. sha1(timestamp + apiKey + secretKey)*\n\nApi key and secret key will be assigned to you by Credy.\n\n## Lead registration flow\n\n1. Request is sent to /v3/customers\n\n2. If request is successful, customer uuid must be stored\n\n3. Request is sent to /v3/leads with previously stored customer uuid in query parameter \"customer\" *ex. /v3/leads?customer=a3ff7c20-e9e8-43a0-bfb7-71a5cf43b8d3* \n4. When the lead is accepted by api (under_investigation is received from POST lead), please redirect the customer to [https://www.credy.ge/loading/?lead={UUID}](https://www.credy.ge/loading/?lead={UUID}) (where {UUID} is replaced by the uuid that you receive from POST lead)\n",
    "version" : "1.0.0",
    "title" : "Poland lenders API",
    "contact" : {
      "email" : "it@credy.eu"
    }
  },
  "paths" : {
    "/receiveLead" : {
      "post" : {
        "summary" : "https://your-domain.com/your-url/receiveLead",
        "operationId" : "receiveLead",
        "description" : "Lead info",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AcceptLanguageHeader"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReceiveLeadBody"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReceiveLeadBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CustomerSuccessResponse"
          },
          "422" : {
            "$ref" : "#/components/responses/CustomerRejectedResponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/checkPin" : {
      "post" : {
        "summary" : "https://your-domain.com/your-url/checkPin",
        "operationId" : "checkPin",
        "description" : "Pin code info",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AcceptLanguageHeader"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckPinBody"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckPinBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CheckPinSuccessResponse"
          },
          "422" : {
            "$ref" : "#/components/responses/CheckPinRejectedesponse"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components" : {
    "responses" : {
      "CustomerSuccessResponse" : {
        "description" : "Successful response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerAccepted"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerAccepted"
            }
          }
        }
      },
      "CustomerRejectedResponse" : {
        "description" : "Invalid params response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerRejected"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerRejected"
            }
          }
        }
      },
      "CheckPinSuccessResponse" : {
        "description" : "Pin confirmed response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CheckPinAccepted"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CheckPinAccepted"
            }
          }
        }
      },
      "CheckPinRejectedesponse" : {
        "description" : "Invalid pin code response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CheckPinRejected"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CheckPinRejected"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "schemas" : {
      "CheckPinBody" : {
        "type" : "object",
        "required" : [ "pin", "phone", "uuid", "external_lead_id", "signature" ],
        "properties" : {
          "pin" : {
            "type" : "string",
            "example" : 1234
          },
          "phone" : {
            "type" : "string",
            "example" : 8144869579
          },
          "uuid" : {
            "type" : "string",
            "example" : "94dd50f3-08ee-41c4-8dd2-3b83d0ebd3ef"
          },
          "external_lead_id" : {
            "type" : "string",
            "example" : "cb5c7696-1233-11e8-b217-8b15c630db00"
          },
          "signature" : {
            "$ref" : "#/components/schemas/Signature"
          }
        }
      },
      "ReceiveLeadBody" : {
        "type" : "object",
        "properties" : {
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "lead" : {
            "$ref" : "#/components/schemas/Lead"
          },
          "agreements" : {
            "$ref" : "#/components/schemas/Agreements"
          },
          "signature" : {
            "$ref" : "#/components/schemas/Signature"
          }
        }
      },
      "Customer" : {
        "type" : "object",
        "required" : [ "first_name", "last_name", "personal_id", "id_card_number", "marital_status", "bank_account", "education", "car", "email", "phone", "address", "lives_at_registered_address", "contact_person_address", "housing_type", "occupation", "neto_income", "monthly_expenses", "employer_address", "agreements", "signature" ],
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "Klara",
            "description" : "Format: /^([A-Za-zĄĆĘŁŃÓŚŹŻąćęłńóśźż]+[\\s-]?)+$/u"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Cieślak",
            "description" : "Format: /^([A-Za-zĄĆĘŁŃÓŚŹŻąćęłńóśźż]+[\\s-]?)+$/u"
          },
          "personal_id" : {
            "type" : "string",
            "example" : "77010219832"
          },
          "id_card_number" : {
            "type" : "string",
            "example" : "AVA435902"
          },
          "marital_status" : {
            "type" : "string",
            "enum" : [ "SINGLE", "MARRIED", "DIVORCED", "WITH_PARTNER", "WIDOW" ],
            "example" : "MARRIED"
          },
          "bank_account" : {
            "type" : "string",
            "example" : "PL56720531865576852508882443"
          },
          "education" : {
            "type" : "string",
            "enum" : [ "NO_EDUCATION", "BASIC_SCHOOL", "HIGH_SCHOOL", "BACHELOR", "MASTER", "PHD", "INDUSTRIAL_SCHOOL" ],
            "example" : "HIGH_SCHOOL"
          },
          "car" : {
            "type" : "boolean",
            "example" : false
          },
          "email" : {
            "type" : "string",
            "example" : "kazmierczak.alan@mailinator.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "+48 881 058 855"
          },
          "address" : {
            "$ref" : "#/components/schemas/PrimaryAddress"
          },
          "lives_at_registered_address" : {
            "type" : "boolean"
          },
          "secondary_address" : {
            "$ref" : "#/components/schemas/SecondaryAddress"
          },
          "housing_type" : {
            "type" : "string",
            "enum" : [ "RENTED_ROOM", "RENTED_APARTMENT_OR_HOUSE", "OWN_HOUSE_OR_APARTMENT", "WITH_PARENTS" ],
            "example" : "RENTED_ROOM"
          },
          "occupation" : {
            "type" : "string",
            "enum" : [ "EMPLOYED_INDEFINITE_PERIOD", "EMPLOYED_SPECIFIED_PERIOD", "WRITTEN_CONTRACT_OR_ORDER", "ECONOMIC_ACTIVITY", "STUDENT", "MATERNITY_LEAVE", "PENSIONER1", "BENEFITS", "FARMER", "UNEMPLOYED", "OTHER" ],
            "example" : "WRITTEN_CONTRACT_OR_ORDER"
          },
          "neto_income" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1500
          },
          "monthly_expenses" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 900
          },
          "employer_address" : {
            "$ref" : "#/components/schemas/ContactAddress"
          },
          "remuneration_deadline" : {
            "type" : "string",
            "example" : "yyyy-mm-dd",
            "description" : "required when `occupation` is not in  :\n- UNEMPLOYED\n"
          },
          "employed_since" : {
            "type" : "string",
            "example" : "yyyy-mm-dd",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "employer" : {
            "type" : "string",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "current_job_position" : {
            "type" : "string",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "employer_phone" : {
            "type" : "string",
            "example" : "+48 881 058 855",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "salary_to_personal_account" : {
            "type" : "boolean",
            "example" : true,
            "description" : "required when `occupation` is not in  :\n- UNEMPLOYED\n"
          },
          "tax_id_number" : {
            "type" : "string",
            "example" : 4170710091,
            "description" : "Format: /^[0-9]{10}$/, required when `occupation` is in:\n- ECONOMIC_ACTIVITY\n"
          },
          "business_registration_date" : {
            "type" : "string",
            "example" : "yyyy-mm-dd",
            "description" : "required when `occupation` is in:\n- ECONOMIC_ACTIVITY\n"
          },
          "university_name" : {
            "type" : "string",
            "description" : "required when `occupation` is in:\n- OCCUPATION_STUDENT\n"
          },
          "university_city" : {
            "type" : "string",
            "description" : "required when `occupation` is in:\n- OCCUPATION_STUDENT\n"
          },
          "agreements" : {
            "$ref" : "#/components/schemas/Agreements"
          },
          "signature" : {
            "$ref" : "#/components/schemas/Signature"
          }
        },
        "xml" : {
          "name" : "request"
        }
      },
      "Lead" : {
        "type" : "object",
        "required" : [ "loan_sum", "loan_period", "ip_address", "uuid", "product" ],
        "properties" : {
          "loan_sum" : {
            "type" : "number",
            "example" : 330.0
          },
          "loan_period" : {
            "type" : "integer",
            "example" : 15
          },
          "ip_address" : {
            "type" : "string",
            "example" : "10.46.194.171"
          },
          "uuid" : {
            "type" : "string",
            "example" : "e3059d69-ca20-4e0b-864c-72838488b473"
          },
          "product" : {
            "type" : "string",
            "example" : "PAYDAY"
          }
        }
      },
      "Signature" : {
        "type" : "object",
        "required" : [ "timestamp", "api_key", "hash" ],
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "unix timestamp, must be UTC +/- 60 seconds",
            "example" : 1529480561
          },
          "api_key" : {
            "type" : "string",
            "description" : "API key",
            "example" : "22194038-bbf6-4be2-a5d5-d54e617e1297"
          },
          "hash" : {
            "type" : "string",
            "description" : "sha1 concatenation of timestamp, api key and secret key",
            "example" : "051d1de34995444d44ab344e62e5775727f10f36"
          }
        }
      },
      "Agreements" : {
        "type" : "object",
        "required" : [ "data_proccessing_policy", "terms_of_service" ],
        "properties" : {
          "data_proccessing_policy" : {
            "type" : "boolean",
            "example" : true
          },
          "terms_of_service" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "PrimaryAddress" : {
        "type" : "object",
        "required" : [ "postal_code", "city", "street", "house_number"],
        "properties" : {
          "postal_code" : {
            "type" : "string",
            "description" : "Format: /^[0-9]{2}[-\\s]*[0-9]{3}$/u",
            "example" : "67-008"
          },
          "city" : {
            "type" : "string",
            "example" : "Katowice",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-]+$/u"
          },
          "street" : {
            "type" : "string",
            "example" : "Szarych Szeregów",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-\\/.]+$/u"
          },
          "house_number" : {
            "type" : "string",
            "example" : "11",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          },
          "flat_number" : {
            "type" : "string",
            "example" : "4",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          }
        }
      },
      "SecondaryAddress" : {
        "type" : "object",
        "required" : [ "postal_code", "city", "street", "house_number"],
        "description" : "required when `lives_at_registered_address` is false",
        "properties" : {
          "postal_code" : {
            "type" : "string",
            "description" : "Format: /^[0-9]{2}[-\\s]*[0-9]{3}$/u",
            "example" : "67-008"
          },
          "city" : {
            "type" : "string",
            "example" : "Katowice",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-]+$/u"
          },
          "street" : {
            "type" : "string",
            "example" : "Szarych Szeregów",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-\\/.]+$/u"
          },
          "house_number" : {
            "type" : "string",
            "example" : "11",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          },
          "flat_number" : {
            "type" : "string",
            "example" : "4",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          }
        }
      },
      "ContactAddress" : {
        "type" : "object",
        "required" : [ "postal_code", "city", "street", "house_number"],
        "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- WRITTEN_CONTRACT_OR_ORDER\n",
        "properties" : {
          "postal_code" : {
            "type" : "string",
            "description" : "Format: /^[0-9]{2}[-\\s]*[0-9]{3}$/u",
            "example" : "67-008"
          },
          "city" : {
            "type" : "string",
            "example" : "Katowice",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-]+$/u"
          },
          "street" : {
            "type" : "string",
            "example" : "Szarych Szeregów",
            "description" : "Format: /^[\\wĄĆĘŁŃÓŚŹŻąćęłńóśźż\\s-\\/.]+$/u"
          },
          "house_number" : {
            "type" : "string",
            "example" : "11",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          },
          "flat_number" : {
            "type" : "string",
            "example" : "4",
            "description" : "Format: /^[0-9]+[A-ZĄĆĘŁŃÓŚŹŻ]?$/u"
          }
        }
      },
      "CustomerAccepted" : {
        "type" : "object",
        "properties" : {
          "external_lead_id" : {
            "type" : "integer",
            "example" : 12345
          },
          "status" : {
            "type" : "string",
            "example" : "accepted"
          }
        }
      },
      "CustomerRejected" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "invalid_params"
          },
          "reason" : {
            "type" : "string",
            "example" : "housing type is invalid, phone number is invalid"
          }
        }
      },
      "CheckPinAccepted" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "accepted"
          }
        }
      },
      "CheckPinRejected" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "pin_invalid"
          }
        }
      },
      "UnauthorizedResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Unauthorized"
          },
          "message" : {
            "type" : "string",
            "example" : "Your request was made with invalid credentials."
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 401
          }
        }
      }
    },
    "parameters" : {
      "AcceptLanguageHeader" : {
        "name" : "Accept-Language",
        "in" : "header",
        "schema" : {
          "format" : "string"
        },
        "required" : false,
        "description" : "To get response error messages in Spanish, header’s value must be set to according ISO code. Ex: `id` or `id-ID`.",
        "example" : "id-ID"
      }
    }
  }
}